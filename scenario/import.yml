# for import node with genesis operations
# - no0 and no1 is in same host
# - no0 nodes does init
# - no1 nodes does import from no0

---
vars:
  .network_id: mitum contest; Sat 26 Dec 2020 05:29:13 AM KST

nodes:
  same_host:
    - no0
    - no1

designs:
  common: |
    {{ setVar ".self.privatekey" newKey }}
    {{ setVar ".self.publickey" .self.privatekey.Publickey }}

    address: {{ setgetVar ".self.address" ( printf "%ssas" .self.alias ) }}
    privatekey: {{ .self.privatekey }}
    network_id: {{ .network_id }}
    network:
      bind: 0.0.0.0:{{ freePort .self.host (print "node-" .self.alias) "udp" }}
      publish: {{ setgetVar ".self.network.publish" ( print .self.host.PublishHost ":" ( freePort .self.host (print "node-" .self.alias) "udp" ) ) }}
      tls_insecure: true
    storage:
      base: /data
      database: redis://{{ setgetVar ".self.storage.database" ( print "localhost:" ( freePort .self.host "database-redis" "tcp" ) ) }}

  genesis: |
      facts:
        - _hint: suffrage-genesis-join-permission-fact-v0.0.1
          nodes:
            - _hint: node-v0.0.1
              address: {{ .nodes.no0.address }}
              publickey: {{ .nodes.no0.publickey }}
     
            - _hint: node-v0.0.1
              address: {{ .nodes.no1.address }}
              publickey: {{ .nodes.no1.publickey }}
     
        - _hint: genesis-network-policy-fact-v0.0.1
          policy:
            _hint: network-policy-v0.0.1
            max_operations_in_proposal: 99
  
  number-nodes: 2

expects:
  - condition: |
      {"msg": "contest ready"}
    actions:
      - type: "run-nodes"
        args:
          - /cmd
          - init
          - config.yml
          - genesis.yml
        range:
          - node: [no0]

  - condition: |
      {
        "x.message": "new block saved",
        "x.blockmap.manifest.height": 0,
        "x.blockmap.node": "{{ .nodes.no0.address }}",
        "x.blockmap.signer": "{{ .nodes.no0.publickey }}"
      }
  
  - condition: |
      {"node": "no0", "x.message": "genesis block generated"}

  - condition: |
      {"node": "no0", "x.exit_code": 0, "stderr": true}
    actions:
      - type: "run-nodes"
        args:
          - /cmd
          - import
          - config.yml
          - /host/no0/data
        range:
          - node: [no1]

  - condition: |
      {"node": "no1", "x.message": "new block merged", "x.height": 0}

  - condition: |
      {"node": "no1", "x.message": "imported BlockMaps validated"}

  - condition: |
      {"node": "no1", "x.exit_code": 0, "stderr": true}
